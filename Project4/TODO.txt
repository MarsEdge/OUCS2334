need class for
	conference
		sponsor name
		collection of meeting
	meeting
		month / year
		location
		collection of conference chairs (scholars)
		collection of conference program committee members (scholars)
		collection of articles published
	conference paper
		collection of authors
		title
		reference to conference were published
		page numbers
		optional link
	journal
		name of publisher
		location where published
		collection of volumes in journal
	volume
		collection of issues
	issue
		month / year when was published
		collection of 
			editors (scholars)
			reviewers (scholars)
			articles published within issue
	journal article
		collection of authors
		title
		reference to issue were published
		page numbers
		optional link
	scholar (author)
		name
			first
			last
		institutional affiliation(s)
		research area(s)
		collection of
			publications
			organized conferences
	ScholarshipModel
		no duplicate scholars
			notify if duplicate exists
	location
		city name
		optional state / province name
		country name
	scholarship structure
		references to
			all scholars
			all journals
			all conferences
		main()
	selection view
		opened at program start
		exit = exit
		title = "ScholarPub"
		menu bar
			file menu
				"File"
				some will be inactive
				
				options:
					load scholarship (init active)
						if unsaved data
							popup dialog asks to save / export / discard data before load
						else
							popup file explorer
								read via bin
						enables / disables buttons due to stuff existing
					save scholarship (init inactive)
						active when data is entered
						popup save dialog
					import scholarship (init active)
						if unsaved data
							popup dialog asks to save / export / discard data before load
						else
							popup file explorer
								read via txt
						enables / disables buttons due to stuff existing
					export scholarship (init inactive)
						active when data is entered
						popup save dialog
		plot menu

		content pane
			3 vertical lists
				title above each
				set of buttons below
					initially most buttons will be inactive except "add scholar"
				
				left list
					title = scholars
					buttons = 
						"add scholar"
							dialog popup
								asks for:
									scholars name
									affiliation
									research areas
								1+ scholar = active "add serials" button
						"delete selected scholars"
							dialog popup to confirm deleting
							if causes empty author list in publication, remove publication
							if causes empty editor / program chair or reviewer / program committee list, remove that serial
						"delete all scholars"
							dialog popup to confirm deleting
							all scholarship data is deleted
				middle list
					title = serials
					buttons = 
						"add serials"
							asks for
								serial info
							when adding editor / program chair or reviewer / program committee, user selects from list of available scholars
							once first serial has been added, "add papers" becomes active
						"delete selected serials"
						"delete all serials"
				right list
					title = papers
					buttons = 
						"add papers"
							asks for
								paper data
							must be at least 1 author / serial data
							user selects author from list of available scholars
						"delete selected papers"
						"delete all papers"
			plow menu
				when first paper is added, becomes active
		lists will be kept in sync
	display view
		plot menu marked "plot"
			has entries for
				type of publication
				publications per year
				conference papers per year
				journal articles per year
				# of coauthors per publication
			creates new view unless already open
				can be closed without closing the program
			if any entries selected
				user is asks what scholars to display from list
			if scholar for display view is deleted
				close plot view
		displays active bar chart
		can be many display views

	controller
		= "ScholarPubController"
		ensures all views are updated properly
ways to enter data for model
	read in from txt file ("importing")
	read in using object io ("loading")
	typed in by user using input views ("entering")
Text io
	same as project 3

